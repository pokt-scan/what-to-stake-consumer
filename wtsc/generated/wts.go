// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetWhatToStakeGetWhatToStakeWtsOptimizationResponse includes the requested fields of the GraphQL type WtsOptimizationResponse.
type GetWhatToStakeGetWhatToStakeWtsOptimizationResponse struct {
	// Flag to indicate if you should use this result to update the stake of the nodes
	Do_update bool `json:"do_update"`
	// Reason to update the stake of the nodes
	Reason string `json:"reason"`
	// Difference between the POKT incomes of the current and proposed strategy in %
	Gain_change_percent float64 `json:"gain_change_percent"`
	// Expected income in POKT in 24Hs according to our simplified model, using the current deployment strategy
	Current_modeled_gain_24h float64 `json:"current_modeled_gain_24h"`
	// Expected income in POKT in 24Hs according to our simplified model, using the proposed deployment strategy
	Optimal_modeled_gain_24h float64 `json:"optimal_modeled_gain_24h"`
	// List of the nodes and services to update
	Servicers []GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode `json:"servicers"`
}

// GetDo_update returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Do_update, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetDo_update() bool { return v.Do_update }

// GetReason returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Reason, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetReason() string { return v.Reason }

// GetGain_change_percent returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Gain_change_percent, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetGain_change_percent() float64 {
	return v.Gain_change_percent
}

// GetCurrent_modeled_gain_24h returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Current_modeled_gain_24h, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetCurrent_modeled_gain_24h() float64 {
	return v.Current_modeled_gain_24h
}

// GetOptimal_modeled_gain_24h returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Optimal_modeled_gain_24h, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetOptimal_modeled_gain_24h() float64 {
	return v.Optimal_modeled_gain_24h
}

// GetServicers returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponse.Servicers, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponse) GetServicers() []GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode {
	return v.Servicers
}

// GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode includes the requested fields of the GraphQL type WtsStakeNode.
type GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode struct {
	// Address of the node
	Address string `json:"address"`
	// Services to stake
	Services []string `json:"services"`
}

// GetAddress returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode.Address, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode) GetAddress() string {
	return v.Address
}

// GetServices returns GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode.Services, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeGetWhatToStakeWtsOptimizationResponseServicersWtsStakeNode) GetServices() []string {
	return v.Services
}

// GetWhatToStakeResponse is returned by GetWhatToStake on success.
type GetWhatToStakeResponse struct {
	// Get a result of what services you should stake to get the best results for your nodes
	GetWhatToStake GetWhatToStakeGetWhatToStakeWtsOptimizationResponse `json:"GetWhatToStake"`
}

// GetGetWhatToStake returns GetWhatToStakeResponse.GetWhatToStake, and is useful for accessing the field via an interface.
func (v *GetWhatToStakeResponse) GetGetWhatToStake() GetWhatToStakeGetWhatToStakeWtsOptimizationResponse {
	return v.GetWhatToStake
}

type WtsMinServiceStakeInput struct {
	Service   string `json:"service"`
	Min_nodes int    `json:"min_nodes"`
}

// GetService returns WtsMinServiceStakeInput.Service, and is useful for accessing the field via an interface.
func (v *WtsMinServiceStakeInput) GetService() string { return v.Service }

// GetMin_nodes returns WtsMinServiceStakeInput.Min_nodes, and is useful for accessing the field via an interface.
func (v *WtsMinServiceStakeInput) GetMin_nodes() int { return v.Min_nodes }

type WtsProcessRequestInput struct {
	Domain               string                    `json:"domain"`
	Service_pool         []string                  `json:"service_pool"`
	Min_increase_percent float64                   `json:"min_increase_percent"`
	Stake_weight         int                       `json:"stake_weight"`
	Min_service_stake    []WtsMinServiceStakeInput `json:"min_service_stake"`
	Time_period          int                       `json:"time_period"`
}

// GetDomain returns WtsProcessRequestInput.Domain, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetDomain() string { return v.Domain }

// GetService_pool returns WtsProcessRequestInput.Service_pool, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetService_pool() []string { return v.Service_pool }

// GetMin_increase_percent returns WtsProcessRequestInput.Min_increase_percent, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetMin_increase_percent() float64 { return v.Min_increase_percent }

// GetStake_weight returns WtsProcessRequestInput.Stake_weight, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetStake_weight() int { return v.Stake_weight }

// GetMin_service_stake returns WtsProcessRequestInput.Min_service_stake, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetMin_service_stake() []WtsMinServiceStakeInput {
	return v.Min_service_stake
}

// GetTime_period returns WtsProcessRequestInput.Time_period, and is useful for accessing the field via an interface.
func (v *WtsProcessRequestInput) GetTime_period() int { return v.Time_period }

// __GetWhatToStakeInput is used internally by genqlient
type __GetWhatToStakeInput struct {
	Input WtsProcessRequestInput `json:"input"`
}

// GetInput returns __GetWhatToStakeInput.Input, and is useful for accessing the field via an interface.
func (v *__GetWhatToStakeInput) GetInput() WtsProcessRequestInput { return v.Input }

// The query or mutation executed by GetWhatToStake.
const GetWhatToStake_Operation = `
query GetWhatToStake ($input: WtsProcessRequestInput!) {
	GetWhatToStake(input: $input) {
		do_update
		reason
		gain_change_percent
		current_modeled_gain_24h
		optimal_modeled_gain_24h
		servicers {
			address
			services
		}
	}
}
`

func GetWhatToStake(
	ctx_ context.Context,
	client_ graphql.Client,
	input WtsProcessRequestInput,
) (*GetWhatToStakeResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetWhatToStake",
		Query:  GetWhatToStake_Operation,
		Variables: &__GetWhatToStakeInput{
			Input: input,
		},
	}
	var err_ error

	var data_ GetWhatToStakeResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
